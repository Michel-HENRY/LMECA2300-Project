static GLchar fullscreen_frag[]={"#version 150 core\n"
"\n"
"layout (std140) uniform objectBlock\n"
"{\n"
"	vec4 fillColor;    // set by bov_points_set_color()\n"
"	vec4 outlineColor; // set by bov_points_set_outline_color()\n"
"	vec2 localPos;     // set by bov_points_set_pos()\n"
"	vec2 localScale;   // set by bov_points_scale()\n"
"	float width;       // set by bov_points_set_width()\n"
"	float marker;      // set by bov_poitns_set_markers()\n"
"	float outlineWidth;// set by bov_points_set_outline_width()\n"
"	int space_type;    // set by bov_points_set_space_type()\n"
"                       // 0: normal sizes, 1: unzoomable, 2: unmodifable pixel size\n"
"};\n"
"\n"
"layout (std140) uniform worldBlock\n"
"{\n"
"	vec2 resolution;\n"
"	vec2 translate;\n"
"	float zoom;\n"
"};\n"
"\n"
"uniform sampler2D framebuffer;\n"
"\n"
"out vec4 outColor;\n"
"\n"
"float min(float a, float b){\n"
"	if(a < b){\n"
"		return a;\n"
"	} else {\n"
"		return b;\n"
"	}\n"
"}\n"
"\n"
"float abs(float a){\n"
"	if(a < 0){\n"
"		return -a;\n"
"	} else {\n"
"		return a;\n"
"	}\n"
"}\n"
"\n"
"void main() {\n"
"	//outColor = vec4((gl_FragCoord.xy/resolution).x, 0, 0, 1);//texture(framebuffer, gl_FragCoord.xy/resolution).rgba; // directly show frambuffer\n"
"	vec4 col = texture(framebuffer, gl_FragCoord.xy/resolution).rgba;\n"
"	vec3 fcol = texture(framebuffer, gl_FragCoord.xy/resolution).rgb;\n"
"	float intensity = fcol.r/fcol.b;// + 0.5;\n"
"	vec2 pos = gl_FragCoord.xy/resolution;\n"
"	if(col.g != 0){//We are into a pression\n"
"		float v1 = 3.5*(intensity-0.7);\n"
"		float v2 = 1.25*intensity;\n"
"		float v3 = min(0.5,intensity)*2.0;\n"
"\n"
"		col.r = 1.5 - 4.0 * abs(intensity - 0.75);\n"
"		col.g = 1.5 - 4.0 * abs(intensity - 0.5 );\n"
"		col.b = 1.5 - 4.0 * abs(intensity - 0.25);\n"
"		col.a = 1;\n"
"	} else if(col.b != 0){\n"
"		col.r = 0; col.b = 0; col.g = 0;\n"
"	}\n"
"	outColor = col;\n"
"}\n"
"\n"
};
